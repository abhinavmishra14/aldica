# Copyright 2016 - 2019 Acosix GmbH

${moduleId}.core.enabled=true
${moduleId}.core.name=shareGrid
${moduleId}.core.login=share
${moduleId}.core.password=shareGrid-dev
${moduleId}.core.local.id=
${moduleId}.core.local.host=
${moduleId}.core.public.host=
${moduleId}.core.public.time.port=
${moduleId}.core.local.time.port=47150
${moduleId}.core.local.time.portRange=0
${moduleId}.core.initialMembers=

${moduleId}.core.public.disco.port=
${moduleId}.core.local.disco.port=47140
${moduleId}.core.local.disco.portRange=0
# Ignite default is 0
${moduleId}.core.local.disco.joinTimeout=0
# Ignite default is 5000
${moduleId}.core.local.disco.ackTimeout=5000
# Ignite default is 5000
${moduleId}.core.local.disco.socketTimeout=5000
# Ignite default is 5000, we grant more time to complete operations (e.g. join)
${moduleId}.core.local.disco.networkTimeout=15000

${moduleId}.core.public.comm.port=
${moduleId}.core.local.comm.port=47130
${moduleId}.core.local.comm.portRange=0
# Ignite default is 0, set to 10000 to avoid OOME (and avoid one of the startup WARN messages)
${moduleId}.core.local.comm.messageQueueLimit=10000
# defaults are 5000 and 600000 (quite significant)
# this can cause long join/startup/rebalance scenarios, especially in NATed / Dockerised / Kubernetes environments with unreachable, internal addresses
${moduleId}.core.local.comm.connectTimeout=1000
${moduleId}.core.local.comm.maxConnectTimeout=10000
# Ignite default is 2000
${moduleId}.core.local.comm.socketWriteTimeout=2000
# Ignite default is 1
${moduleId}.core.local.comm.connectionsPerNode=1
# Ignite default is false, might need to be changed in NATed / Dockerised / Kubernetes environment to avoid connection attempts to unreachable, internal addresses
${moduleId}.core.local.comm.filterReachableAddresses=false

${moduleId}.core.failureDetectionTimeout=10000
${moduleId}.core.systemWorkerBlockedTimeout=\${${moduleId}.core.failureDetectionTimeout}

# default is actually Math.max(8, #available_proc_count)
# Share should be quite lightweight, so we reduce to 2
${moduleId}.core.publicThreadPoolSize=2
# Ignite default is same as public thread pool size
${moduleId}.core.serviceThreadPoolSize=\${${moduleId}.core.publicThreadPoolSize}
# Ignite default is same as public thread pool size
${moduleId}.core.systemThreadPoolSize=\${${moduleId}.core.publicThreadPoolSize}
# despite no intention to use any IgniteAsyncCallback we have to allow pool of 1 thread (default = public thread pool size)
${moduleId}.core.asyncCallbackThreadPoolSize=1
# Ignite default is 4, but Share should be quite lightweight
${moduleId}.core.managementThreadPoolSize=1
# despite p2p being disabled we have to allow pool of 1 thread (default 2)
${moduleId}.core.peerClassLoadingThreadPoolSize=1
# despite not using igfs we have to allow pool of 1 thread (default = #available_proc_count)
${moduleId}.core.igfsThreadPoolSize=1
# Ignite default is same as public thread pool size
${moduleId}.core.dataStreamerThreadPoolSize=\${${moduleId}.core.publicThreadPoolSize}
# Ignite default is same as public thread pool size
${moduleId}.core.utilityCacheThreadPoolSize=\${${moduleId}.core.publicThreadPoolSize}
# despite not using query we have to allow pool of 1 thread (default = public thread pool size)
${moduleId}.core.queryThreadPoolSize=1
# Ignite default is 1
${moduleId}.core.rebalanceThreadPoolSize=1

# 4K page size, 10 - 20 MiB system storage, 32 - 128 MiB default storage
${moduleId}.core.storage.pageSize=4096
${moduleId}.core.storage.systemInitialSize=10485760
${moduleId}.core.storage.systemMaxSize=20971520
${moduleId}.core.storage.defaultStorageRegion.initialSize=33554432
${moduleId}.core.storage.defaultStorageRegion.maxSize=134217728
${moduleId}.core.storage.defaultStorageRegion.swapPath=\${java.io.tmpdir}/AcosixAlfrescoIgnite/defaultDataRegionSwap

${moduleId}.webSessionCache.enabled=false
${moduleId}.webSessionCache.gridName=\${${moduleId}.core.name}
${moduleId}.webSessionCache.cacheName=servlet.webSessionCache
${moduleId}.webSessionCache.retriesOnFailure=2
${moduleId}.webSessionCache.retriesTimeout=5000
${moduleId}.webSessionCache.keepBinary=true

${moduleId}.webSessionCache.cacheMode=REPLICATED
${moduleId}.webSessionCache.backups=1
${moduleId}.webSessionCache.maxSize=10000

# in case Hazelcast clustering has been configured we remove it
# all bean names are as per http://docs.alfresco.com/6.1/concepts/hazelcast-cluster-share.html
${moduleId}.core.webframework.cluster.clusterservice._remove=true
${moduleId}.core.webframework.cluster.slingshot._remove=true
${moduleId}.core.topic._remove=true